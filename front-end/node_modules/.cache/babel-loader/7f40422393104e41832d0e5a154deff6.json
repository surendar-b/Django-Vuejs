{"ast":null,"code":"import TreeNode from './TreeNode';\nimport TreeLeaf from './TreeLeaf';\nimport isLeafFunc from '../utils/isLeaf';\nimport TreeDefaultNode from './TreeDefaultNode';\nexport default {\n  name: 'TreeNode',\n  components: {\n    TreeDefaultNode,\n    TreeLeaf,\n    TreeNode\n  },\n  props: {\n    rowData: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    defaultOrder: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    depth: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function () {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    isLeaf(rowData) {\n      return isLeafFunc(rowData);\n    },\n\n    toggle() {\n      this.isOpen = !this.isOpen;\n    },\n\n    open() {\n      this.isOpen = true;\n    },\n\n    close() {\n      this.isOpen = false;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmEE,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,eAAe;EACbC,IAAI,EAAE,UADO;EAEbC,UAAU,EAAE;IAACF,eAAD;IAAkBF,QAAlB;IAA4BD;EAA5B,CAFC;EAGbM,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MADC;MAEPC,OAAO,EAAE,MAAM;QAAE,OAAO,EAAP;MAAU;IAFpB,CADJ;IAKLC,YAAY,EAAE;MACZH,IAAI,EAAEI,KADM;MAEZF,OAAO,EAAE,MAAM;QAAE,OAAO,EAAP;MAAU;IAFf,CALT;IASLG,KAAK,EAAE;MACLL,IAAI,EAAEM,MADD;MAELJ,OAAO,EAAE;IAFJ;EATF,CAHM;EAiBbK,IAAI,EAAE,YAAU;IACd,OAAO;MACLC,MAAM,EAAE;IADH,CAAP;EAGD,CArBY;EAsBbC,OAAO,EAAE;IACPC,MAAM,CAACX,OAAD,EAAS;MACb,OAAOL,UAAU,CAACK,OAAD,CAAjB;IACD,CAHM;;IAIPY,MAAM,GAAE;MACN,KAAKH,MAAL,GAAc,CAAC,KAAKA,MAApB;IACD,CANM;;IAOPI,IAAI,GAAE;MACF,KAAKJ,MAAL,GAAc,IAAd;IACH,CATM;;IAUPK,KAAK,GAAE;MACH,KAAKL,MAAL,GAAc,KAAd;IACJ;;EAZO;AAtBI,CAAf","names":["TreeNode","TreeLeaf","isLeafFunc","TreeDefaultNode","name","components","props","rowData","type","Object","default","defaultOrder","Array","depth","Number","data","isOpen","methods","isLeaf","toggle","open","close"],"sourceRoot":"","sources":["/home/surendar/Caresoft/front-end/node_modules/vue-tree-table-component/src/components/TreeNode.vue"],"sourcesContent":["<template>\n  <div>\n    <slot\n      name=\"nodeTemplate\"\n      :row-data=\"rowData\"\n      :default-order=\"defaultOrder\"\n      :depth=\"depth\"\n      :on-open=\"open\"\n      :on-toggle=\"toggle\"\n      :on-close=\"close\"\n    >\n      <TreeDefaultNode\n        :row-data=\"rowData\"\n        :default-order=\"defaultOrder\"\n        :depth=\"depth\"\n        :on-open=\"open\"\n        :on-toggle=\"toggle\"\n        :on-close=\"close\"\n      />\n    </slot>\n\n    <template v-if=\"isOpen\">\n      <template\n        v-for=\"(child, index) in rowData.children\"\n      >\n        <tree-node\n          v-if=\"!isLeaf(child)\"\n          :key=\"index\"\n          :depth=\"depth+1\"\n          :row-data=\"child\"\n          :default-order=\"defaultOrder\"\n        >\n          <template #leafTemplate=\"leafProps\">\n            <slot\n              name=\"leafTemplate\"\n              v-bind=\"leafProps\"\n            />\n          </template>\n\n          <template #nodeTemplate=\"nodeProps\">\n            <slot\n              name=\"nodeTemplate\"\n              v-bind=\"nodeProps\"\n            />\n          </template>\n        </tree-node>\n\n        <tree-leaf\n          v-if=\"isLeaf(child)\"\n          :key=\"index\"\n          :depth=\"depth+1\"\n          :row-data=\"child\"\n          :default-order=\"defaultOrder\"\n        >\n          <template #leafTemplate=\"leafProps\">\n            <slot\n              name=\"leafTemplate\"\n              v-bind=\"leafProps\"\n            />\n          </template>\n        </tree-leaf>\n      </template>\n    </template>\n  </div>\n</template>\n\n<script>\n  import TreeNode from './TreeNode'\n  import TreeLeaf from './TreeLeaf'\n  import isLeafFunc from '../utils/isLeaf'\n  import TreeDefaultNode from './TreeDefaultNode'\n\n  export default {\n    name: 'TreeNode',\n    components: {TreeDefaultNode, TreeLeaf, TreeNode},\n    props: {\n      rowData: {\n        type: Object,\n        default: () => { return {} }\n      },\n      defaultOrder: {\n        type: Array,\n        default: () => { return [] }\n      },\n      depth: {\n        type: Number,\n        default: 0\n      }\n    },\n    data: function(){\n      return {\n        isOpen: false\n      }\n    },\n    methods: {\n      isLeaf(rowData){\n        return isLeafFunc(rowData)\n      },\n      toggle(){\n        this.isOpen = !this.isOpen\n      },\n      open(){\n          this.isOpen = true\n      },\n      close(){\n          this.isOpen = false\n      }\n    }\n  }\n</script>\n\n<style scoped>\n</style>\n\n"]},"metadata":{},"sourceType":"module"}