{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"select\", {\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.category = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.response, item => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: item,\n      key: item.id\n    }, _toDisplayString(item.category), 9\n    /* TEXT, PROPS */\n    , _hoisted_1);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 512\n  /* NEED_PATCH */\n  ), [[_vModelSelect, $data.category]]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the CategoryName\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.category = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.category]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the ProductName\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.product_name = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.product_name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the price\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.price = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.price]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.addcategory && $options.addcategory(...args))\n  }, \"Add Product\")])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;6EACAA,oBAIW,QAJX,EAIW;IAJHC,KAAK,EAAC,cAIH;+DAJ2BC,iBAAQC;EAInC,CAJX,sBACIC,oBAESC,SAFT,EAES,IAFT,EAESC,YAFcJ,cAEd,EAFMK,IAAgB,IAAZ;yBAAnBH,oBAES,QAFT,EAES;MAFyBI,KAAK,EAAED,IAEhC;MAFuCE,GAAG,EAAEF,IAAI,CAACG;IAEjD,CAFT,mBACKH,IAAI,CAACI,SADV,EACkB;IAAA;IADlB,EACkBC,UADlB;GAES,CAFT;;EAAA,GADJ;;EAAA,oBAAsCV,mBAKpCF,oBAKM,KALN,EAKM,IALN,EAKM,iBAJJA,oBAA2E,OAA3E,EAA2E;IAApEa,IAAI,EAAC,MAA+D;IAAxDC,WAAW,EAAC,wBAA4C;+DAAVZ,iBAAQC;EAAE,CAA3E;;EAAA,kBAAiED,iBAI7D,kBAHJF,oBAA8E,OAA9E,EAA8E;IAAvEa,IAAI,EAAC,MAAkE;IAA3DC,WAAW,EAAC,uBAA+C;+DAAdZ,qBAAYC;EAAE,CAA9E;;EAAA,kBAAgED,qBAG5D,kBAFJF,oBAAiE,OAAjE,EAAiE;IAA1Da,IAAI,EAAC,MAAqD;IAA9CC,WAAW,EAAC,iBAAkC;+DAAPZ,cAAKC;EAAE,CAAjE;;EAAA,kBAA0DD,cAEtD,EADJF,oBAAiD,QAAjD,EAAiD;IAAxCe,OAAK,yCAAEC,qDAAF;EAAmC,CAAjD,EAA6B,aAA7B,CACI,CALN","names":["_createElementVNode","class","$data","$event","_createElementBlock","_Fragment","_renderList","item","value","key","id","category","_hoisted_1","type","placeholder","onClick","$options"],"sourceRoot":"","sources":["/home/surendar/Caresoft/front-end/src/views/AddProduct.vue"],"sourcesContent":["<template>\n<select class=\"form-control\" v-model=\"category\">\n    <option v-for=\"item in response\" :value=\"item\" :key=\"item.id\">\n      {{ item.category }}\n    </option>\n  </select>\n  <div>\n    <input type=\"text\" placeholder=\"Enter the CategoryName\" v-model=\"category\">\n    <input type=\"text\" placeholder=\"Enter the ProductName\" v-model=\"product_name\">\n    <input type=\"text\" placeholder=\"Enter the price\" v-model=\"price\">\n    <button @click=\"addcategory\">Add Product</button>\n  </div>\n\n</template>\n\n<script>\nexport default {\nname: 'AddCategory',\ndata(){\n    return {\n        response:[],\n        category: null,\n        product_name: null,\n        price: null,\n    }\n},\nasync mounted() {\n    let response = await fetch('http://127.0.0.1:8000/getcategorys/')\n    let category = await response.json()\n    this.response = category\n    console.warn(category)\n},\nmethods: {\n    async addcategory(){\n        const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({ \"category\":this.category.id,\"product_name\":this.product_name ,\"price\":this.price})\n        };\n        let response = await fetch('http://127.0.0.1:8000/addproduct/',requestOptions)\n        let result = await response.json()\n        console.log(result)\n        if(result.success== true)\n        {\n            console.log(result)\n            this.$router.push(\"/treeview\");\n        }\n    }\n}\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}