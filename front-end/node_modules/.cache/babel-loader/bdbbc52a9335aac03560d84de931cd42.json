{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_tree_node = _resolveComponent(\"tree-node\");\n\n  const _component_tree_leaf = _resolveComponent(\"tree-leaf\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.tableData, rowData => {\n    return _openBlock(), _createElementBlock(_Fragment, null, [!$options.isLeaf(rowData) ? (_openBlock(), _createBlock(_component_tree_node, {\n      key: rowData.uuid,\n      \"row-data\": rowData,\n      depth: 0,\n      \"default-order\": $props.columns\n    }, {\n      nodeTemplate: _withCtx(nodeProps => [_renderSlot(_ctx.$slots, \"nodeTemplate\", _normalizeProps(_guardReactiveProps(nodeProps)))]),\n      leafTemplate: _withCtx(leafProps => [_renderSlot(_ctx.$slots, \"leafTemplate\", _normalizeProps(_guardReactiveProps(leafProps)))]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"row-data\", \"default-order\"])) : _createCommentVNode(\"v-if\", true), $options.isLeaf(rowData) ? (_openBlock(), _createBlock(_component_tree_leaf, {\n      key: rowData.uuid,\n      \"row-data\": rowData,\n      depth: 0,\n      \"default-order\": $props.columns\n    }, {\n      leafTemplate: _withCtx(leafProps => [_renderSlot(_ctx.$slots, \"leafTemplate\", _normalizeProps(_guardReactiveProps(leafProps)))]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"row-data\", \"default-order\"])) : _createCommentVNode(\"v-if\", true)], 64\n    /* STABLE_FRAGMENT */\n    );\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;;uBACEA,oBA0CM,KA1CN,EA0CM,IA1CN,EA0CM,oBAzCJA,oBAwCWC,SAxCX,EAwCW,IAxCX,EAwCWC,YAvCSC,gBAuCT,EAvCFC,OAAoB,IAAb;gEAILC,gBAAOD,OAAP,mBADTE,aAoBYC,oBApBZ,EAoBY;MAlBTC,GAAG,EAAEJ,OAAO,CAACK,IAkBJ;MAjBT,YAAUL,OAiBD;MAhBTM,KAAK,EAAE,CAgBE;MAfT,iBAAeP;IAeN,CApBZ;MAOaQ,YAAY,WAAEC,SACvB,IADgC,CAChCC,YAGEC,WAHF,EAGE,cAHF,EAGEC,oCADQH,SACR,EAHF,CADgC,CAAX;MAOZI,YAAY,WAAEC,SACvB,IADgC,CAChCJ,YAGEC,WAHF,EAGE,cAHF,EAGEC,oCADQE,SACR,EAHF,CADgC,CAAX;;;;KAdzB;;IAAA,uEAuBQZ,gBAAOD,OAAP,mBADRE,aAaYY,oBAbZ,EAaY;MAXTV,GAAG,EAAEJ,OAAO,CAACK,IAWJ;MAVT,YAAUL,OAUD;MATTM,KAAK,EAAE,CASE;MART,iBAAeP;IAQN,CAbZ;MAOaa,YAAY,WAAEC,SACvB,IADgC,CAChCJ,YAGEC,WAHF,EAGE,cAHF,EAGEC,oCADQE,SACR,EAHF,CADgC,CAAX;;;;KAPzB;;IAAA;;;GAcS,CAxCX;;EAAA,CAyCI,EA1CN","names":["_createElementBlock","_Fragment","_renderList","$props","rowData","$options","_createBlock","_component_tree_node","key","uuid","depth","nodeTemplate","nodeProps","_renderSlot","_ctx","_normalizeProps","leafTemplate","leafProps","_component_tree_leaf"],"sourceRoot":"","sources":["/home/surendar/Caresoft/front-end/node_modules/vue-tree-table-component/src/components/TreeBody.vue"],"sourcesContent":["<template>\n  <div>\n    <template\n      v-for=\"rowData in tableData\"\n      :row-data=\"rowData\"\n    >\n      <tree-node\n        v-if=\"!isLeaf(rowData)\"\n        :key=\"rowData.uuid\"\n        :row-data=\"rowData\"\n        :depth=\"0\"\n        :default-order=\"columns\"\n      >\n        <template #nodeTemplate=\"nodeProps\">\n          <slot\n            name=\"nodeTemplate\"\n            v-bind=\"nodeProps\"\n          />\n        </template>\n\n        <template #leafTemplate=\"leafProps\">\n          <slot\n            name=\"leafTemplate\"\n            v-bind=\"leafProps\"\n          />\n        </template>\n      </tree-node>\n\n      <tree-leaf\n        v-if=\"isLeaf(rowData)\"\n        :key=\"rowData.uuid\"\n        :row-data=\"rowData\"\n        :depth=\"0\"\n        :default-order=\"columns\"\n      >\n        <template #leafTemplate=\"leafProps\">\n          <slot\n            name=\"leafTemplate\"\n            v-bind=\"leafProps\"\n          />\n        </template>\n      </tree-leaf>\n    </template>\n  </div>\n</template>\n\n<script>\n  import TreeNode from './TreeNode'\n  import TreeLeaf from './TreeLeaf'\n  import isLeafFunc from '../utils/isLeaf'\n\n  export default {\n    name: 'TreeBody',\n    components: {TreeLeaf, TreeNode},\n    props: {\n      tableData: {\n        type: Array,\n        default: function(){ return [] }\n      },\n      columns: {\n        type: Array,\n        default: function(){ return [] }\n      },\n    },\n    methods: {\n      isLeaf(rowData){\n        return isLeafFunc(rowData)\n      }\n    }\n  }\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}