{"ast":null,"code":"export default {\n  name: 'TreeDefaultNode',\n  props: {\n    rowData: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    defaultOrder: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    depth: {\n      type: Number,\n      default: 0\n    },\n    onToggle: {\n      type: Function,\n      default: () => {}\n    },\n    onOpen: {\n      type: Function,\n      default: () => {}\n    },\n    onClose: {\n      type: Function,\n      default: () => {}\n    }\n  },\n  data: function () {\n    return {\n      isOpen: false\n    };\n  },\n  computed: {\n    columnWithOpenButton: function () {\n      return this.defaultOrder[0];\n    },\n    reguralColumns: function () {\n      return this.defaultOrder.slice(1);\n    },\n    leftPadding: function () {\n      return this.depth * 16;\n    }\n  },\n  methods: {\n    toggle() {\n      this.isOpen = !this.isOpen;\n      this.onToggle();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqCE,eAAe;EACbA,IAAI,EAAE,iBADO;EAEbC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MADC;MAEPC,OAAO,EAAE,MAAM;QAAE,OAAO,EAAP;MAAU;IAFpB,CADJ;IAKLC,YAAY,EAAE;MACZH,IAAI,EAAEI,KADM;MAEZF,OAAO,EAAE,MAAM;QAAE,OAAO,EAAP;MAAU;IAFf,CALT;IASLG,KAAK,EAAE;MACLL,IAAI,EAAEM,MADD;MAELJ,OAAO,EAAE;IAFJ,CATF;IAaLK,QAAQ,EAAE;MACRP,IAAI,EAAEQ,QADE;MAERN,OAAO,EAAE,MAAM,CAAC;IAFR,CAbL;IAiBLO,MAAM,EAAE;MACNT,IAAI,EAAEQ,QADA;MAENN,OAAO,EAAE,MAAM,CAAC;IAFV,CAjBH;IAqBLQ,OAAO,EAAE;MACPV,IAAI,EAAEQ,QADC;MAEPN,OAAO,EAAE,MAAM,CAAC;IAFT;EArBJ,CAFM;EA4BbS,IAAI,EAAE,YAAU;IACd,OAAO;MACLC,MAAM,EAAE;IADH,CAAP;EAGD,CAhCY;EAiCbC,QAAQ,EAAE;IACRC,oBAAoB,EAAE,YAAU;MAC9B,OAAO,KAAKX,YAAL,CAAkB,CAAlB,CAAP;IACD,CAHO;IAIRY,cAAc,EAAE,YAAU;MACxB,OAAO,KAAKZ,YAAL,CAAkBa,KAAlB,CAAwB,CAAxB,CAAP;IACD,CANO;IAORC,WAAW,EAAE,YAAY;MACvB,OAAO,KAAKZ,KAAL,GAAW,EAAlB;IACF;EATQ,CAjCG;EA4Cba,OAAO,EAAE;IACPC,MAAM,GAAE;MACN,KAAKP,MAAL,GAAc,CAAC,KAAKA,MAApB;MACA,KAAKL,QAAL;IACF;;EAJO;AA5CI,CAAf","names":["name","props","rowData","type","Object","default","defaultOrder","Array","depth","Number","onToggle","Function","onOpen","onClose","data","isOpen","computed","columnWithOpenButton","reguralColumns","slice","leftPadding","methods","toggle"],"sourceRoot":"","sources":["/home/surendar/Caresoft/front-end/node_modules/vue-tree-table-component/src/components/TreeDefaultNode.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div\n        class=\"indentation\"\n        :style=\"{ width: leftPadding + 'px' }\"\n      />\n      <div class=\"cell\">\n        <div\n          class=\"open-button\"\n          @click=\"toggle\"\n        >\n          <div\n            v-if=\"!isOpen\"\n            class=\"closed\"\n          />\n          <div\n            v-if=\"isOpen\"\n            class=\"open\"\n          />\n        </div>\n        <div>\n          {{ rowData[columnWithOpenButton] }}\n        </div>\n      </div>\n      <div\n        v-for=\"key in reguralColumns\"\n        :key=\"key\"\n        class=\"cell\"\n      >\n        {{ rowData[key] }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'TreeDefaultNode',\n    props: {\n      rowData: {\n        type: Object,\n        default: () => { return {} }\n      },\n      defaultOrder: {\n        type: Array,\n        default: () => { return [] }\n      },\n      depth: {\n        type: Number,\n        default: 0\n      },\n      onToggle: {\n        type: Function,\n        default: () => {}\n      },\n      onOpen: {\n        type: Function,\n        default: () => {}\n      },\n      onClose: {\n        type: Function,\n        default: () => {}\n      }\n    },\n    data: function(){\n      return {\n        isOpen: false\n      }\n    },\n    computed: {\n      columnWithOpenButton: function(){\n        return this.defaultOrder[0]\n      },\n      reguralColumns: function(){\n        return this.defaultOrder.slice(1)\n      },\n      leftPadding: function () {\n        return this.depth*16\n      }\n    },\n    methods: {\n      toggle(){\n        this.isOpen = !this.isOpen\n        this.onToggle()\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  @import \"common.css\";\n\n  .open-button{\n    float: left;\n    display: inline;\n    padding-right: 0.5rem;\n  }\n\n  .closed::before{\n    content: \"▸\";\n  }\n\n  .open::before{\n    content: \"▾\";\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}