{"ast":null,"code":"import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TreeTableHeader = _resolveComponent(\"TreeTableHeader\");\n\n  const _component_TreeBody = _resolveComponent(\"TreeBody\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_renderSlot(_ctx.$slots, \"headerTemplate\", {\n    columns: $props.columns\n  }, () => [_createVNode(_component_TreeTableHeader, {\n    columns: $props.columns\n  }, null, 8\n  /* PROPS */\n  , [\"columns\"])]), _createVNode(_component_TreeBody, {\n    \"table-data\": $props.tableData,\n    columns: $options.columnsOrder\n  }, {\n    nodeTemplate: _withCtx(nodeProps => [_renderSlot(_ctx.$slots, \"nodeTemplate\", _normalizeProps(_guardReactiveProps(nodeProps)))]),\n    leafTemplate: _withCtx(leafProps => [_renderSlot(_ctx.$slots, \"leafTemplate\", _normalizeProps(_guardReactiveProps(leafProps)))]),\n    _: 3\n    /* FORWARDED */\n\n  }, 8\n  /* PROPS */\n  , [\"table-data\", \"columns\"])]);\n}","map":{"version":3,"mappings":";;;;;;uBACEA,oBA2BM,KA3BN,EA2BM,IA3BN,EA2BM,CA1BJC,YAKOC,WALP,EAKO,gBALP,EAKO;IAHJC,OAAO,EAAEC;EAGL,CALP,QAKO,CADLC,aAAsCC,0BAAtC,EAAsC;IAApBH,OAAO,EAAEC;EAAW,CAAtC,EAAkC,IAAlC,EAAkC;EAAA;EAAlC,EAAkC,WAAlC,CACK,CALP,CA0BI,EAnBJC,aAkBWE,mBAlBX,EAkBW;IAjBR,cAAYH,gBAiBJ;IAhBRD,OAAO,EAAEK;EAgBD,CAlBX;IAIaC,YAAY,WAAEC,SACvB,IADgC,CAChCT,YAGEC,WAHF,EAGE,cAHF,EAGES,oCADQD,SACR,EAHF,CADgC,CAAX;IAQZE,YAAY,WAAEC,SACvB,IADgC,CAChCZ,YAGEC,WAHF,EAGE,cAHF,EAGES,oCADQE,SACR,EAHF,CADgC,CAAX;;;;GAZzB;;EAAA,4BAmBI,CA3BN","names":["_createElementBlock","_renderSlot","_ctx","columns","$props","_createVNode","_component_TreeTableHeader","_component_TreeBody","$options","nodeTemplate","nodeProps","_normalizeProps","leafTemplate","leafProps"],"sourceRoot":"","sources":["/home/surendar/Caresoft/front-end/node_modules/vue-tree-table-component/src/components/TreeTable.vue"],"sourcesContent":["<template>\n  <div>\n    <slot\n      name=\"headerTemplate\"\n      :columns=\"columns\"\n    >\n      <TreeTableHeader :columns=\"columns\" />\n    </slot>\n\n    <TreeBody\n      :table-data=\"tableData\"\n      :columns=\"columnsOrder\"\n    >\n      <template #nodeTemplate=\"nodeProps\">\n        <slot\n          name=\"nodeTemplate\"\n          v-bind=\"nodeProps\"\n        />\n      </template>\n\n\n      <template #leafTemplate=\"leafProps\">\n        <slot\n          name=\"leafTemplate\"\n          v-bind=\"leafProps\"\n        />\n      </template>\n    </TreeBody>\n  </div>\n</template>\n\n<script>\n  import TreeBody from './TreeBody'\n  import TreeTableHeader from './TreeTableHeader'\n  import { uuid } from 'vue-uuid';\n\n  export default {\n    name: 'TreeTable',\n    components: {TreeBody, TreeTableHeader},\n    props: {\n      tableData: {\n        type: Array,\n        default: () => { return [] }\n      },\n      columns: {\n        type: Array,\n        default: () => { return [] }\n      }\n    },\n    computed: {\n      columnsOrder(){\n        return this.columns.map(column => column.id);\n      },\n    },\n    created() {\n        this.enrichTableData()\n    },\n    methods: {\n      addUniqueId(data){\n        data.uuid = uuid.v4()\n        if (data.children) {\n            data.children.forEach(child => this.addUniqueId(child))\n        }\n      },\n      enrichTableData() {\n          this.tableData.forEach(el => this.addUniqueId(el))\n      }\n    },\n  }\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}