{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"select\", {\n    class: \"select-selects\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.id = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.category, item => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: item,\n      key: item.id\n    }, _toDisplayString(item.category), 9\n    /* TEXT, PROPS */\n    , _hoisted_1);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 512\n  /* NEED_PATCH */\n  ), [[_vModelSelect, $data.id]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"New Category Name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.categoryName = $event),\n    class: \"inpt\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.categoryName]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.update && $options.update(...args)),\n    class: \"btn2\"\n  }, \"Update Category\")]);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAQM,KARN,EAQM,IARN,EAQM,iBAPJC,oBAIO,QAJP,EAIO;IAJCC,KAAK,EAAC,gBAIP;+DAJiCC,WAAEC;EAInC,CAJP,sBACAJ,oBAESK,SAFT,EAES,IAFT,EAESC,YAFcH,cAEd,EAFMI,IAAgB,IAAZ;yBAAnBP,oBAES,QAFT,EAES;MAFyBQ,KAAK,EAAED,IAEhC;MAFuCE,GAAG,EAAEF,IAAI,CAACG;IAEjD,CAFT,mBACKH,IAAI,CAACI,SADV,EACkB;IAAA;IADlB,EACkBC,UADlB;GAES,CAFT;;EAAA,GADA;;EAAA,oBAAwCT,WAOpC,kBAFNF,oBAAuF,OAAvF,EAAuF;IAAhFY,IAAI,EAAC,MAA2E;IAApEC,WAAW,EAAC,mBAAwD;+DAA3BX,qBAAYC,OAAe;IAAbF,KAAK,EAAC;EAAO,CAAvF;;EAAA,kBAA4DC,qBAEtD,EADJF,oBAA6D,QAA7D,EAA6D;IAApDc,OAAK,yCAAEC,2CAAF,CAA+C;IAArCd,KAAK,EAAC;EAA+B,CAA7D,EAAqC,iBAArC,CACI,CARN","names":["_createElementBlock","_createElementVNode","class","$data","$event","_Fragment","_renderList","item","value","key","id","category","_hoisted_1","type","placeholder","onClick","$options"],"sourceRoot":"","sources":["/home/surendar/Caresoft/front-end/src/views/UpdateCategory.vue"],"sourcesContent":["<template>\n  <div>\n    <select class=\"select-selects\" v-model=\"id\">\n    <option v-for=\"item in category\" :value=\"item\" :key=\"item.id\">\n      {{ item.category }}\n    </option>\n  </select>\n  <input type=\"text\" placeholder=\"New Category Name\" v-model=\"categoryName\" class=\"inpt\">\n    <button @click=\"update\" class=\"btn2\">Update Category</button>\n  </div>\n</template>\n\n<script>\nexport default {\nname : 'DeleteCategory',\ndata(){\n    return{\n        id:null,\n        category:[],\n        categoryName: null,\n    }\n},\nasync mounted() {\n    let response = await fetch('http://127.0.0.1:8000/getcategorys/')\n    let category = await response.json()\n    this.category = category\n    console.warn(category)\n},\nmethods: {\n    async update(){\n        const requestOptions = {\n        method: 'PUT',\n        body: JSON.stringify({ \"category\":this.categoryName })\n        };\n        let url = 'http://127.0.0.1:8000/update/category/'+this.id.id\n        let response = await fetch(url,requestOptions)\n        let result = await response.json()\n        // console.log(result)\n        if(result.success==true)\n        {\n            //console.log(result)\n            this.$router.push(\"/treeview\");\n        }\n    }\n}\n}\n</script>\n\n<style>\n.select-selects {\n  border: #f0e119;\n  width: 100px;\n  height: 40px;\n  font-size: 12px;\n}\n.inpt[type=text] {\n  width: 35%;\n  padding: 12px 15px;\n  margin: 8px 0;\n  box-sizing: border-box;\n  border: 2px solid rgba(255, 251, 0, 0.733);\n  border-radius: 4px;\n}\n.btn2 {\n  background-color: white;\n  color: black;\n  border: 2px solid #f1e210; /* Green */\n  border-radius: 4px;\n  padding: 12px 28px;\n  width: 175px;\n  font-weight: bold;\n}\n.btn2:hover {\n  background-color: #f0e119; /* Green */\n  color: white;\n}\nselect {\n        width: 470px;\n        height: 35px;\n        padding: 5px 35px 5px 5px;\n        font-size: 18px;\n      }\n</style>"]},"metadata":{},"sourceType":"module"}