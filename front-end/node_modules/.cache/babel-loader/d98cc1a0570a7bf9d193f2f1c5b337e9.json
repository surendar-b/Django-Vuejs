{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"select\", {\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.id = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.product, item => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: item,\n      key: item.id\n    }, _toDisplayString(item.product_name), 9\n    /* TEXT, PROPS */\n    , _hoisted_1);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 512\n  /* NEED_PATCH */\n  ), [[_vModelSelect, $data.id]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"New Category Name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.categoryid = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.categoryid]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"New Category Name\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.product_name = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.product_name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"New Category Name\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.price = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.price]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.update && $options.update(...args))\n  }, \"Update Category\")]);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAUM,KAVN,EAUM,IAVN,EAUM,iBATJC,oBAIO,QAJP,EAIO;IAJCC,KAAK,EAAC,cAIP;+DAJ+BC,WAAEC;EAIjC,CAJP,sBACAJ,oBAESK,SAFT,EAES,IAFT,EAESC,YAFcC,YAEd,EAFMC,IAAe,IAAX;yBAAnBR,oBAES,QAFT,EAES;MAFwBS,KAAK,EAAED,IAE/B;MAFsCE,GAAG,EAAEF,IAAI,CAACG;IAEhD,CAFT,mBACKH,IAAI,CAACI,aADV,EACsB;IAAA;IADtB,EACsBC,UADtB;GAES,CAFT;;EAAA,GADA;;EAAA,oBAAsCV,WASlC,kBAJNF,oBAAwE,OAAxE,EAAwE;IAAjEa,IAAI,EAAC,MAA4D;IAArDC,WAAW,EAAC,mBAAyC;+DAAZZ,mBAAUC;EAAE,CAAxE;;EAAA,kBAA4DD,mBAItD,kBAHNF,oBAA0E,OAA1E,EAA0E;IAAnEa,IAAI,EAAC,MAA8D;IAAvDC,WAAW,EAAC,mBAA2C;+DAAdZ,qBAAYC;EAAE,CAA1E;;EAAA,kBAA4DD,qBAGtD,kBAFNF,oBAAmE,OAAnE,EAAmE;IAA5Da,IAAI,EAAC,MAAuD;IAAhDC,WAAW,EAAC,mBAAoC;+DAAPZ,cAAKC;EAAE,CAAnE;;EAAA,kBAA4DD,cAEtD,EADJF,oBAAgD,QAAhD,EAAgD;IAAvCe,OAAK,yCAAEC,2CAAF;EAAkC,CAAhD,EAAwB,iBAAxB,CACI,CAVN","names":["_createElementBlock","_createElementVNode","class","$data","$event","_Fragment","_renderList","_ctx","item","value","key","id","product_name","_hoisted_1","type","placeholder","onClick","$options"],"sourceRoot":"","sources":["/home/surendar/Caresoft/front-end/src/views/UpdateProduct.vue"],"sourcesContent":["<template>\n  <div>\n    <select class=\"form-control\" v-model=\"id\">\n    <option v-for=\"item in product\" :value=\"item\" :key=\"item.id\">\n      {{ item.product_name }}\n    </option>\n  </select>\n  <input type=\"text\" placeholder=\"New Category Name\" v-model=\"categoryid\">\n  <input type=\"text\" placeholder=\"New Category Name\" v-model=\"product_name\">\n  <input type=\"text\" placeholder=\"New Category Name\" v-model=\"price\">\n    <button @click=\"update\">Update Category</button>\n  </div>\n</template>\n\n<script>\nexport default {\nname : 'DeleteCategory',\ndata(){\n    return{\n        id:null,\n        prosucts:[],\n        categoryid: null,\n        product_name: null,\n        price:null,\n    }\n},\nasync mounted() {\n    let response = await fetch('http://127.0.0.1:8000/getproducts/')\n    let product = await response.json()\n    this.products = product\n    console.warn(prosuct)\n},\nmethods: {\n    async update(){\n        const requestOptions = {\n        method: 'PUT',\n        body: JSON.stringify({ \"category\":this.categoryid.category,\"product_name\":this.product_name,\"price\":this.price })\n        };\n        let url = 'http://127.0.0.1:8000/update/product/'+this.id.id\n        let response = await fetch(url,requestOptions)\n        let result = await response.json()\n        // console.log(result)\n        if(result.success==true)\n        {\n            //console.log(result)\n            this.$router.push(\"/treeview\");\n        }\n    }\n}\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}